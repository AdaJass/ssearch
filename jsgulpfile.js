// Generated by CoffeeScript 1.10.0
var argv, browserSync, coffee, coffeelint, del, filepath, gulp, gutil, isDebug, nodemon, nodemon_instance, reload, rename, runSequence;

gulp = require('gulp');

runSequence = require('run-sequence');

gutil = require('gulp-util');

del = require('del');

nodemon = require('gulp-nodemon');

argv = require('yargs').argv;

rename = require('gulp-rename');

browserSync = require('browser-sync');

reload = browserSync.reload;

isDebug = !(argv.r || false);

filepath = {};

//filepath.coffee = ['app.coffee', 'controllers/*.coffee', 'common/*.coffee', 'config/*.coffee'];

filepath.js = ['**.js'];

gulp.task('default', function(callback) {
  return runSequence(['serve'], ['browserSync', 'watch'], callback);
});

nodemon_instance = void 0;

gulp.task('serve', function(callback) {
  var called;
  called = false;
  if (!nodemon_instance) {
    nodemon_instance = nodemon({
      script: 'app.js',
      ext: 'none',
      execMap: {
        'js': 'node --harmony'
      }
    }).on('restart', function() {
      return console.log('restart server......................');
    }).on('start', function() {
      if (!called) {
        called = true;
        return callback();
      }
    });
  } else {
    nodemon_instance.emit("restart");
    callback();
  }
  return nodemon_instance;
});

gulp.task('browserSync', function() {
  return browserSync({
    proxy: 'localhost:3000',
    port: 8888,
    open: true,
    notify: true,
    reloadDelay: 500
  });
});

gulp.task('watch', function() {
  gulp.watch(['views/**', 'public/**'], ['reload-client']);
  return gulp.watch(filepath.js, ['reload-server']);
});

gulp.task('reload-client', function(callback) {
  return runSequence('bs-reload', callback);
});

gulp.task('reload-server', function(callback) {
  return runSequence('serve', 'bs-reload', callback);
});

gulp.task('bs-reload', function() {
  return browserSync.reload();
});
